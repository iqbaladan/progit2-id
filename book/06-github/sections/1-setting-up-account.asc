=== Pengaturan dan Konfigurasi Akun

(((GitHub, user accounts)))
Hal pertama yang perlu Anda lakukan adalah membuat akun pengguna gratis.
Cukup dengan mengunjungi https://github.com[], pilih nama pengguna yang belum diambil, sediakan alamat surel dan kata sandi, dan klik tombol ``Sign up for GitHub'' hijau yang besar.

.The GitHub sign-up form.
image::images/signup.png[The GitHub sign-up form.]

Hal selanjutnya yang akan Anda lihat adalah halaman harga untuk akun berbayar, tetapi aman untuk mengabaikan halaman ini untuk saat ini.
GitHub akan mengirimkan surel untuk memverifikasi alamat yang Anda berikan.
Silakan lanjutkan dan lakukan verifikasi, karena verifikasi sangat penting (seperti yang akan kita lihat nanti).

[NOTE]
====
GitHub memberikan semua fungsinya dengan akun gratis, dengan batasan bahwa semua proyek Anda sepenuhnya publik (setiap orang memiliki akses baca).
Rencana pembayaran GitHub mencakup sejumlah proyek pribadi (setiap orang yang memiliki proyek di GitHub), tetapi kita tidak akan membahasnya dalam buku ini.
====

Mengklik logo Octocat di bagian kiri atas layar akan membawa Anda ke halaman dasbor Anda.
Anda sekarang siap menggunakan GitHub.

==== Akses SSH 

(((SSH keys, with GitHub)))
Sampai sekarang, Anda sepenuhnya dapat terhubung dengan repositori Git menggunakan protokol `https://`, otentikasi dengan nama pengguna dan kata sandi yang baru Anda siapkan.
Tetapi, untuk hanya mengkloning proyek publik, Anda bahkan tidak perlu mendaftar - akun yang baru saja kita buat ikut berperan saat kita fork proyek-proyek dan push ke fork kita kemudian.

Jika Anda ingin menggunakan SSH remotes, Anda harus mengkonfigurasi kunci publik..
(Jika Anda belum memilikinya, lihat <<_generate_ssh_key>>.)
Buka pengaturan akun Anda dengan menggunakan tautan di bagian kanan atas window:

.The ``Account settings'' link.
image::images/account-settings.png[The ``Account settings'' link.]

Kemudian pilih bagian ``SSH Keys'' di sebelah kiri.

.The ``SSH keys'' link.
image::images/ssh-keys.png[The ``SSH keys'' link.]

Dari sana, klik tombol "`Add a SSH key`", beri nama kunci Anda, tempel isi berkas kunci-publik Anda `~/.ssh/id_rsa.pub` (atau apa pun namanya) ke teks area, dan klik ``Add key''.

[NOTE]
====
Pastikan untuk memberi nama kunci SSH Anda sesuatu yang mudah Anda ingat. Anda dapat memberi nama setiap kunci Anda (contohnya, "Laptop Saya" atau "Akun Kerja") sehingga jika Anda perlu mencabut kunci nanti, Anda dapat dengan mudah memberi tahu yang mana yang Anda cari.
====

[[_personal_avatar]]
==== Avatar Anda

Selanjutnya, jika Anda mau, Anda bisa mengganti avatar yang dihasilkan untuk Anda dengan gambar pilihan Anda. Pertama buka tab ``Profil'' (di atas tab Kunci SSH) dan klik ``Upload new picture''.

.The ``Profile'' link.
image::images/your-profile.png[The ``Profile'' link.]

Kita akan memilih salinan logo Git yang ada di hard drive kita dan kemudian kita dapat memangkasnya.

.Crop your avatar
image::images/avatar-crop.png[Crop your uploaded avatar.]

Sekarang dimanapun Anda berinteraksi di situs ini, orang akan melihat avatar Anda di samping nama pengguna Anda.

Jika Anda kebetulan mengunggah avatar ke layanan Gravatar yang populer (sering digunakan untuk akun Wordpress), avatar itu akan digunakan secara default dan Anda dapat mengabaikan langkah ini.

==== Alamat Surel Anda

Cara GitHub memetakan Git commits Anda ke pengguna Anda adalah melalui alamat surel. Jika Anda menggunakan beberapa alamat surel dalam commits Anda dan Anda ingin GitHub menautkannya dengan benar, Anda perlu menambahkan semua alamat surel yang Anda gunakan ke bagian surel pada bagian admin.

[[_add_email_addresses]]
.Add email addresses
image::images/email-settings.png[Add all your email addresses.]

Di <<_add_email_addresses>> kita dapat melihat beberapa situasi yang mungkin berbeda. Alamat paling atas diverifikasi dan ditetapkan sebagai alamat utama, artinya di sanalah Anda akan mendapatkan notifikasi dan tanda terima. Alamat kedua diverifikasi dan dapat ditetapkan sebagai utama jika Anda ingin mengalihkannya. Alamat akhir tidak terverifikasi, artinya Anda tidak dapat menjadikannya alamat utama Anda. Jika GitHub melihat semua ini dalam  pesan commit di repositori mana pun di situs, itu akan ditautkan ke pengguna Anda sekarang.

==== Otentikasi Dua Faktor

Akhirnya, untuk keamanan ekstra, Anda harus menyiapkan Otentikasi Dua-faktor atau ``2FA''. Otentikasi Dua-Faktor adalah mekanisme otentikasi yang semakin populer saat ini untuk mengurangi risiko akun Anda disusupi jika kata sandi Anda dicuri. Mengaktifkannya akan membuat GitHub meminta anda untuk dua metode otentikasi yang berbeda, sehingga jika salah satu dari mereka disusupi, penyerang tidak akan dapat mengakses akun Anda.

Anda dapat menemukan konfigurasi Otentikasi Dua-faktor di bawah tab security pada pengaturan Akun Anda.

.2FA in the Security Tab
image::images/2fa-1.png[2FA in the Security Tab]

Jika Anda mengklik tombol ``Set up two-factor authentication'', itu akan membawa Anda ke halaman konfigurasi dimana Anda dapat memilih untuk menggunakan aplikasi telepon untuk menghasilkan kode kedua Anda (``kata sandi satu kali berdasarkan waktu``), atau Anda dapat meminta GitHub mengirimkan kode melalui SMS setiap kali Anda harus masuk.

Setelah Anda memilih metode mana yang Anda inginkan dan ikuti petunjuk untuk menyiapkan 2FA, akun Anda nanti akan sedikit lebih aman dan Anda harus memberikan kode selain kata sandi Anda setiap kali Anda masuk ke GitHub.
