[[_github]]
== GitHub

(((GitHub)))
GitHub adalah penyimpanan terbesar tunggal untuk repositori Git, dan Github adalah titik pusat kolaborasi untuk jutaan pengembang dan proyek.
Sebagian besar dari semua repositori Git di simpan di GitHub, dan banyak proyek open-source menggunakan Github untuk menyimpan Git, pelacakan masalah, tinjauan kode, dan hal-hal lainnya.
Jadi sementara ini GitHub bukan bagian langsung dari proyek open source Git, ada kesempatan baik bagi Anda yang ingin atau perlu berinteraksi dengan GitHub pada titik tertentu saat menggunakan Git secara profesional.

Bab ini membahas tentang penggunaan GitHub secara efektif.
Kita akan membahas tentang cara mendaftar dan mengelola akun, membuat dan menggunakan repositori Git, alur kerja umum untuk berkontribusi pada proyek dan untuk menerima kontribusi-kontribusi Anda, antarmuka program GitHub dan banyak tip-tip kecil untuk membuat hidup Anda lebih mudah pada umumnya.

Jika Anda tidak tertarik menggunakan GitHub untuk menyimpan proyek Anda sendiri atau untuk berkolaborasi dengan proyek lain yang di simpan di GitHub, Anda dapat dengan aman melewati ke <<_git_tools>>.

[WARNING]
.Perubahan Antar Muka
====
Penting untuk dicatat bahwa seperti banyak situs web aktif, elemen UI dalam tangkapan layar ini pasti akan berubah seiring waktu. Semoga gagasan umum tentang apa yang ingin kita capai di sini akan tetap ada di sana, tetapi jika Anda menginginkan versi layar yang lebih mutakhir, versi daring buku ini mungkin memiliki tangkapan layar yang lebih baru.
====

include::sections/1-setting-up-account.asc[]

include::sections/2-contributing.asc[]

include::sections/3-maintaining.asc[]

include::sections/4-managing-organization.asc[]

include::sections/5-scripting.asc[]

=== Ringkasan

Sekarang Anda adalah pengguna GitHub.
Anda mengetahui cara membuat akun, mengelola organisasi, membuat dan push ke repositori, berkontribusi pada proyek orang lain dan menerima kontribusi dari orang lain.
Di bab selanjutnya, Anda akan mempelajari alat dan tip yang lebih canggih untuk menghadapi situasi yang kompleks, yang benar-benar akan membuat Anda menjadi master Git.
