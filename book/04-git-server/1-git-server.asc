== Git di _Server_

(((serving repositories)))
Pada tahap ini, seharusnya Anda sudah mampu melakukan sebagian besar tugas sehari-hari yang akan Anda kerjakan dengan menggunakan Git. 
Namun, untuk melakukan kolaborasi di Git, Anda harus memiliki repositori remote Git.
Walaupun secara teknis Anda dapat mendorong dan menarik perubahan dari dan ke repositori seseorang, namun hal itu sangat tidak dianjurkan karena Anda akan kebingungan terhadap apa yang sedang mereka kerjakan jika Anda tidak berhati-hati.
Selanjutnya, Anda mengharapkan kolaborator Anda dapat mengakses repositori meskipun komputer Anda sedang luring - memiliki repositori umum yang dapat diandalkan seringkali berguna dalam hal ini. Oleh karena itu, metode yang dianjurkan untuk berkolaborasi dengan seseorang adalah dengan cara membuat repositori perantara dimana Anda berdua memiliki akses untuk mendorong dan menarik perubahan dari repositori tersebut.

Menjalankan _server_ Git cukup mudah dilakukan.
Pertama, Anda memilih protokol yang diinginkan untuk berkomunikasi dengan _server_ Anda.
Bagian pertama dari bab ini akan membahas protokol-protokol yang tersedia beserta pro dan kontra dari masing-masing protokol.
Bagian selanjutnya akan menjelaskan beberapa pengaturan khusus menggunakan protokol-protokol tersebut dan bagaimana manjalankan _server_ Anda dengannya.
Terakhir, kita akan membahas beberapa pilihan tempat penyimpanan, jika Anda tidak keberatan menyimpan kode Anda pada _server_ orang lain dan tidak ingin rumit-rumit mengatur dan merawat _server_ Anda sendiri.

Jika Anda tidak tertarik untuk menjalankan _server_ sendiri, Anda dapat melewatinya dan langsung ke bagian terakhir bab ini untuk melihat beberapa pilihan untuk pengaturan penyimpanan akun dan kemudian beralih ke bab berikutnya, di mana kami membahas berbagai seluk beluk tentang bekerja dalam lingkungan sumber kontrol yang terdistribusi.

Sebuah repositori remote pada umumnya merupakan sebuah _repositori kosong_ - sebuah repositori Git yang tidak memiliki direktori kerja.
Karena repositori tersebut hanya digunakan sebagai titik kolaborasi, tidak ada alasan untuk memeriksa setiap gambarannya pada _disk_; itu hanya data Git.
Dalam istilah yang paling sederhana, sebuah repositori kosong merupakan isi dari direktori `.git` proyek Anda dan tidak ada yang lain.

include::sections/protocols.asc[]

include::sections/git-on-a-server.asc[]

include::sections/generating-ssh-key.asc[]

include::sections/setting-up-server.asc[]

include::sections/git-daemon.asc[]

include::sections/smart-http.asc[]

include::sections/gitweb.asc[]

include::sections/gitlab.asc[]

include::sections/hosted.asc[]

=== Ringkasan

Anda memiliki beberapa pilihan untuk mendapatkan repositori remote Git dan menjalankannya sehingga Anda dapat bekerjasama dengan orang lain atau membagikan pekerjaan Anda.

Menjalankan _server_ Anda sendiri akan memberikan Anda kontrol yang lebih dan memungkinkan Anda untuk menjalankan _server_ di dalam _firewall_ Anda sendiri, namun _server_ semacam itu umumnya membutuhkan cukup banyak waktu untuk persiapan dan perawatan. Jika Anda meletakkan data Anda pada _server_ penyimpanan milik orang lain, mudah sekali untuk melakukan pengaturan dan perawatan; Namun, Anda harus mampu menyimpan kode Anda pada _server_ milik orang lain, dan beberapa organisasi tidak mengizinkan hal tersebut.

Seharusnya cukup mudah untuk menentukan solusi yang mana atau kombinasi solusi seperti apa yang sesuai bagi Anda dan organisasi Anda.
